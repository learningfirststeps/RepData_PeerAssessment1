getwd()
testdata <- cbind(restoreddata, if (as.POSIXlt(as.Date(restoreddata$date))$wday == 6 | as.POSIXlt(as.Date(restoreddata$date))$wday == 0) "weekend" else "weekday")
rawdata <- read.csv("activity.csv")
cleandata <- subset(rawdata, complete.cases(rawdata))
restoreddata <- rawdata
for (k in 1:nrow(restoreddata)) {
if ( is.na( restoreddata[k,"steps"] ) ) {
restoreddata[k,"steps"] <- p[ as.character( restoreddata[k,"interval"] ) ]
}
}
p <- tapply(cleandata$steps, cleandata$interval, mean)
p <- p[ !is.na(p) ]
restoreddata <- rawdata
for (k in 1:nrow(restoreddata)) {
if ( is.na( restoreddata[k,"steps"] ) ) {
restoreddata[k,"steps"] <- p[ as.character( restoreddata[k,"interval"] ) ]
}
}
testdata <- cbind(restoreddata, if (as.POSIXlt(as.Date(restoreddata$date))$wday == 6 | as.POSIXlt(as.Date(restoreddata$date))$wday == 0) "weekend" else "weekday")
testdata <- cbind(restoreddata, as.POSIXlt(as.Date(restoreddata$date))$wday)
head(testdata)
?data.frame
test <- data.frame (weekday = 1:nrow(restoreddata))
head(test)
weekdaycol <- data.frame (weekday = 1:nrow(restoreddata))
for (z in 1:nrow(restoreddata)) if (as.POSIXlt(as.Date(restoreddata$date[z]))$wday[z] == 6 | as.POSIXlt(as.Date(restoreddata$date))$wday == 0)
)
for (z in 1:nrow(restoreddata)) if (as.POSIXlt(as.Date(restoreddata$date[z]))$wday[z] == 6 | as.POSIXlt(as.Date(restoreddata$date))$wday == 0) weekdaycol[z] <- "weekend" else weekdaycol[z] <- "weekday"
for (z in 1:nrow(restoreddata)) if (as.POSIXlt(as.Date(restoreddata$date[z]))$wday == 6 | as.POSIXlt(as.Date(restoreddata$date[z]))$wday == 0) weekdaycol[z] <- "weekend" else weekdaycol[z] <- "weekday"
weekdaycol <- data.frame (weekday = as.POSIXlt(as.Date(restoreddata$date))$wday)
nrow(weekdaycol)
head(weekdaycol)
weekdaycol <- data.frame (weekday = as.POSIXlt(as.Date(restoreddata$date))$wday)
for (z in 1:nrow(weekdaycol)) if (weekdaycol[z] == 6 | weekdaycol[z] == 0) weekdaycol[z] <- "weekend" else weekdaycol[z] <- "weekday"
weekdaycol[1]
weekdaycol[,1]
weekdaycol <- data.frame (weekday = as.POSIXlt(as.Date(restoreddata$date))$wday)
head(weekdaycol)
weekdaycol[is.na(weekdaycol[1])
)
weekdaycol[is.na(weekdaycol)
)
weekdaycol[is.na(weekdaycol))
weekdaycol[is.na(weekdaycol)]
nrow(weekdaycol[!is.na(weekdaycol)])
length(weekdaycol[!is.na(weekdaycol)])
weekdaycol[1]
weekdaycol[[1]]
weekdaycol$weekday[1]
weekdaycol$weekday[1] %in% c(0,6)
weekdaycol$weekday[100] %in% c(0,6)
weekdaycol$weekday[200] %in% c(0,6)
weekdaycol$weekday[500] %in% c(0,6)
weekdaycol$weekday[1000] %in% c(0,6)
weekdaycol$weekday[1200] %in% c(0,6)
weekdaycol$weekday[1] %in% c(1,6)
weekdaycol <- data.frame (weekday = as.POSIXlt(as.Date(restoreddata$date))$wday)
for (z in 1:nrow(weekdaycol)) weekdaycol$weekday[z] <- if (weekdaycol$weekday[z] %in% c(0,6)) "weekend" else "weekday"
nrow(weekdaycol[weekdaycol$weekday="weekday"])
nrow(weekdaycol[weekdaycol$weekday=="weekday"])
nrow(weekdaycol$weekday[weekdaycol$weekday=="weekday"])
nrow(weekdaycol$weekday[weekdaycol$weekday=="weekend"])
length(weekdaycol$weekday[weekdaycol$weekday=="weekend"])
length(weekdaycol$weekday[weekdaycol$weekday=="weekday"])
ffdata<-restoreddata
testdata<-split(ffdata,weekdaycol)
head(testdata)
str(testdata)
p_new <- tapply(testdata$steps, testdata$interval, mean)
?lapply
p_new <- laaply(testdata, tapply(testdata$steps, testdata$interval, mean))
p_new <- lapply(testdata, tapply(testdata$steps, testdata$interval, mean))
testdata <- restoreddata
p_new<- lapply(split(testdata, weekdaycol), tapply(testdata$steps, testdata$interval, mean))
p_new<- lapply(split(testdata, weekdaycol), do.call(tapply(testdata$steps, testdata$interval, mean))
)
p_new<- lapply(split(testdata, weekdaycol), do.call("tapply", testdata$steps, testdata$interval, mean))
p_new<- lapply(split(testdata, weekdaycol), do.call("tapply", c(testdata$steps, testdata$interval, mean))
)
p_new<- lapply(split(testdata, weekdaycol), do.call("tapply", c(testdata$steps, testdata$interval, mean))
)
p_new<- lapply(split(testdata, weekdaycol), do.call("tapply", c(testdata$steps, testdata$interval, mean)))
testdata<-split(testdata, weekdaycol)
head(testdata["weekend"])
nrow(testdata["weekend"])
length(testdata["weekend"])
str(testdata["weekend"])
testdata["weekend"]$stesp[1]
testdata["weekend"]$steps[1]
testdata["weekend"]$steps[45]
testdata["weekend"]$steps[450]
testdata["weekend"]$steps
testdata["weekend"]$date
testdata["weekend"][date]
testdata["weekend"][[date]]
testdata["weekend"][["date"]]
testdata["weekend"]["date"]
testdata$`weekend`["date"]
testdata$`weekend`$date[1]
ffdata <- split(restoreddata, weekdaycol)
p_new <- rbind( tapply(ffdata$`weekend`$steps, ffdata$`weekend`$interval, mean), tapply(ffdata$`weekday`$steps, ffdata$`weekday`$interval, mean))
head(p_new)
str(p_new)
p_new[1]
p_new[0]
p_new[1,]
p_new[,1]
p_new_weekend <- cbind( tapply(ffdata$`weekend`$steps, ffdata$`weekend`$interval, mean), "weekend")
p_new_weekend[,1]
p_new_weekend[1,]
p_new_weeday <- cbind( tapply(ffdata$`weekday`$steps, ffdata$`weekday`$interval, mean), "weekday")
p_new <- rbind(p_new_weekend,p_new_weeday)
str(p_new)
p_new[1,]
names(p_new)
p_new[1,3]
p_new[1,2]
weekdaycol <- data.frame (weekday = as.POSIXlt(as.Date(restoreddata$date))$wday)
for (z in 1:nrow(weekdaycol)) weekdaycol$weekday[z] <- if (weekdaycol$weekday[z] %in% c(0,6)) "weekend" else "weekday"
ffdata <- split(restoreddata, weekdaycol)
p_new_weekend <- cbind( tapply(ffdata$`weekend`$steps, ffdata$`weekend`$interval, mean), "weekend")
p_new_weeday <- cbind( tapply(ffdata$`weekday`$steps, ffdata$`weekday`$interval, mean), "weekday")
p_new <- rbind(p_new_weekend,p_new_weeday)
p_new <- transform(p_new, weekday = factor(p_new[,2]))
xyplot(p_new ~ as.numeric(names(p_new)) | weekday, type = "l", layout = c(2, 1), xlab = "5-minute interval", ylab = "Average number of steps taken, averaged across all days" )
library(lattice)
xyplot(p_new ~ as.numeric(names(p_new)) | weekday, type = "l", layout = c(2, 1), xlab = "5-minute interval", ylab = "Average number of steps taken, averaged across all days" )
xyplot(p_new ~ as.numeric(names(p_new)) | p_new[,2], type = "l", layout = c(2, 1), xlab = "5-minute interval", ylab = "Average number of steps taken, averaged across all days" )
p_new_weekend <- tapply(ffdata$`weekend`$steps, ffdata$`weekend`$interval, mean)
p_new_weekend[1,]
p_new_weekend[1]
df <- data.frame (interval = names(p), avg_steps = NA, weekday = NA)
head(df)
df <- data.frame (interval = NA, avg_steps = NA, weekday = NA)
df
df$interval <- ffdata$`weekend`$interval
p_new_weekend <- tapply(ffdata$`weekend`$steps, ffdata$`weekend`$interval, mean)
p_new_weekend <- cbind( names(p_new_weekend), p_new_weekend, "weekend")
head(p_new_weekend)
p_new_weeday <- tapply(ffdata$`weekday`$steps, ffdata$`weekday`$interval, mean)
p_new_weeday <- cbind( names(p_new_weekday), p_new_weekday, "weekday")
p_new_weekday <- tapply(ffdata$`weekday`$steps, ffdata$`weekday`$interval, mean)
p_new_weekday <- cbind( names(p_new_weekday), p_new_weekday, "weekday")
p_new <- rbind(p_new_weekend,p_new_weeday)
head(p_new)
tail(p_new)
p_new <- rbind(p_new_weekend,p_new_weekday)
tail(p_new)
head(p_new)
rownames(p_new) <- 1:nrow(p_new)
head(p_new)
tail(p_new)
head(p_new[,2])
head(p_new[,3])
p_new <- transform(p_new, weekday = factor(p_new[,3]))
xyplot(as.numeric(p_new$interval) ~ as.numeric(p_new$avg_steps_weekday)) | p_new$weekday, type = "l", layout = c(2, 1), xlab = "5-minute interval", ylab = "Average number of steps taken, averaged across all days" )
xyplot(as.numeric(p_new$interval) ~ as.numeric(p_new$avg_steps_weekday) | p_new$weekday, type = "l", layout = c(2, 1), xlab = "5-minute interval", ylab = "Average number of steps taken, averaged across all days" )
xyplot(as.numeric(p_new$interval) ~ as.numeric(p_new$avg_steps_weekday) | p_new$weekday, type = "l", layout = c(1, 2), xlab = "5-minute interval", ylab = "Average number of steps taken, averaged across all days" )
p_new$interval
rownames(p_new_weekend) <- paste (names(p_new_weekend),"_weekend")
?paste
rownames(p_new_weekend) <- paste (names(p_new_weekend),"_weekend", sep="")
rownames(p_new_weekend) <- paste (names(p_new_weekend),rep("_weekend", length(names(p_new_weekend)), sep="")
)
names(p_new_weekend)
rownames(p_new_weekend)
head(p_new_weekend)
rownames(p_new_weekend) <- paste (names(p_new_weekend),rep("_weekend", length(names(p_new_weekend)), sep=""))
head(p_new_weekend)
p_new_weekend
